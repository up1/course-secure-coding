Ô
o/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Services/TokenService.cs
public 
	interface 
ITokenService 
{ 
string 

GenerateToken 
( 
string 
userId  &
,& '
string( .
username/ 7
)7 8
;8 9
}		 
public 
class 
TokenService 
: 
ITokenService )
{ 
private 
readonly 
IConfiguration #
_config$ +
;+ ,
public 

TokenService 
( 
IConfiguration &
config' -
)- .
{ 
_config 
= 
config 
; 
} 
public 

string 
GenerateToken 
(  
string  &
userId' -
,- .
string/ 5
username6 >
)> ?
{ 
var 
key 
= 
new  
SymmetricSecurityKey *
(* +
Encoding+ 3
.3 4
UTF84 8
.8 9
GetBytes9 A
(A B
	ConstantsB K
.K L
JwtL O
.O P
KeyP S
)S T
)T U
;U V
var 
creds 
= 
new 
SigningCredentials *
(* +
key+ .
,. /
SecurityAlgorithms0 B
.B C

HmacSha256C M
)M N
;N O
var 
claims 
= 
new 
[ 
] 
{ 	
new 
Claim 
( #
JwtRegisteredClaimNames -
.- .
Sub. 1
,1 2
userId3 9
)9 :
,: ;
new 
Claim 
( #
JwtRegisteredClaimNames -
.- .

UniqueName. 8
,8 9
username: B
)B C
} 	
;	 

var 
token 
= 
new 
JwtSecurityToken (
(( )
issuer   
:   
	Constants   
.   
Jwt   !
.  ! "
Issuer  " (
,  ( )
audience!! 
:!! 
	Constants!! 
.!!  
Jwt!!  #
.!!# $
Audience!!$ ,
,!!, -
claims"" 
:"" 
claims"" 
,"" 
expires## 
:## 
DateTime## 
.## 
UtcNow## $
.##$ %
AddHours##% -
(##- .
$num##. /
)##/ 0
,##0 1
signingCredentials$$ 
:$$ 
creds$$  %
)%% 	
;%%	 

return'' 
new'' #
JwtSecurityTokenHandler'' *
(''* +
)''+ ,
.'', -

WriteToken''- 7
(''7 8
token''8 =
)''= >
;''> ?
}(( 
})) ×J
a/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
Logging 
. 
ClearProviders 
( 
)  
;  !
builder 
. 
Logging 
. 

AddConsole 
( 
) 
; 
builder 
. 
Services 
. 

AddOpenApi 
( 
) 
; 
builder 
. 
Services 
. 
AddDbContext 
< 
AppDbContext *
>* +
(+ ,
opt, /
=>0 2
opt 
. 
UseInMemoryDatabase 
( 
$str $
)$ %
)% &
;& '
builder 
. 
Services 
. 
AddAuthorization !
(! "
options" )
=>* ,
{ 
options 
. 
	AddPolicy 
( 
$str (
,( )
policy* 0
=>1 3
policy 
. 
Requirements 
. 
Add 
(  
new  #!
OrderOwnerRequirement$ 9
(9 :
): ;
); <
)< =
;= >
} 
) 
; 
builder 
. 
Services 
. 
	AddScoped 
< !
IAuthorizationHandler 0
,0 1
OrderOwnerHandler2 C
>C D
(D E
)E F
;F G
builder 
. 
Services 
. 
	AddScoped 
< 
ITokenService (
,( )
TokenService* 6
>6 7
(7 8
)8 9
;9 :
var 
key 
= 	
new
  
SymmetricSecurityKey "
(" #
Encoding# +
.+ ,
UTF8, 0
.0 1
GetBytes1 9
(9 :
	Constants: C
.C D
JwtD G
.G H
KeyH K
)K L
)L M
;M N
builder 
. 
Services 
. 
AddAuthentication "
(" #
options# *
=>+ -
{ 
options   
.   %
DefaultAuthenticateScheme   %
=  & '
JwtBearerDefaults  ( 9
.  9 : 
AuthenticationScheme  : N
;  N O
options!! 
.!! "
DefaultChallengeScheme!! "
=!!# $
JwtBearerDefaults!!% 6
.!!6 7 
AuthenticationScheme!!7 K
;!!K L
}"" 
)"" 
.## 
AddJwtBearer## 
(## 
options## 
=>## 
{$$ 
options%% 
.%% %
TokenValidationParameters%% %
=%%& '
new%%( +%
TokenValidationParameters%%, E
{&& 	
ValidateIssuer'' 
='' 
true'' !
,''! "
ValidateAudience(( 
=(( 
true(( #
,((# $$
ValidateIssuerSigningKey)) $
=))% &
true))' +
,))+ ,
ValidIssuer** 
=** 
	Constants** #
.**# $
Jwt**$ '
.**' (
Issuer**( .
,**. /
ValidAudience++ 
=++ 
	Constants++ %
.++% &
Jwt++& )
.++) *
Audience++* 2
,++2 3
IssuerSigningKey,, 
=,, 
new,, " 
SymmetricSecurityKey,,# 7
(,,7 8
Encoding-- 
.-- 
UTF8-- 
.-- 
GetBytes-- &
(--& '
	Constants--' 0
.--0 1
Jwt--1 4
.--4 5
Key--5 8
)--8 9
)--9 :
}.. 	
;..	 

}// 
)// 
;// 
builder22 
.22 
Services22 
.22 
AddRateLimiter22 
(22  
options22  '
=>22( *
{33 
options44 
.44 !
AddFixedWindowLimiter44 !
(44! "
$str44" )
,44) *
limiter44+ 2
=>443 5
{55 
limiter66 
.66 
Window66 
=66 
TimeSpan66 !
.66! "
FromSeconds66" -
(66- .
$num66. 0
)660 1
;661 2
limiter77 
.77 
PermitLimit77 
=77 
$num77 
;77  
limiter88 
.88  
QueueProcessingOrder88 $
=88% & 
QueueProcessingOrder88' ;
.88; <
OldestFirst88< G
;88G H
limiter99 
.99 

QueueLimit99 
=99 
$num99 
;99 
}:: 
):: 
;:: 
options<< 
.<< 

OnRejected<< 
=<< 
async<< 
(<<  
context<<  '
,<<' (
token<<) .
)<<. /
=><<0 2
{== 
context>> 
.>> 
HttpContext>> 
.>> 
Response>> $
.>>$ %

StatusCode>>% /
=>>0 1
StatusCodes>>2 =
.>>= >$
Status429TooManyRequests>>> V
;>>V W
await?? 
context?? 
.?? 
HttpContext?? !
.??! "
Response??" *
.??* +

WriteAsync??+ 5
(??5 6
$str??6 b
,??b c
token??d i
)??i j
;??j k
}@@ 
;@@ 
}AA 
)AA 
;AA 
builderCC 
.CC 
ServicesCC 
.CC 
AddControllersCC 
(CC  
)CC  !
;CC! "
varDD 
appDD 
=DD 	
builderDD
 
.DD 
BuildDD 
(DD 
)DD 
;DD 
appFF 
.FF 
UseRateLimiterFF 
(FF 
)FF 
;FF 
appGG 
.GG 
UseAuthenticationGG 
(GG 
)GG 
;GG 
appHH 
.HH 
UseAuthorizationHH 
(HH 
)HH 
;HH 
appII 
.II 
MapControllersII 
(II 
)II 
;II 
usingLL 
(LL 
varLL 

scopeLL 
=LL 
appLL 
.LL 
ServicesLL 
.LL  
CreateScopeLL  +
(LL+ ,
)LL, -
)LL- .
{MM 
varNN 
dbNN 

=NN 
scopeNN 
.NN 
ServiceProviderNN "
.NN" #
GetRequiredServiceNN# 5
<NN5 6
AppDbContextNN6 B
>NNB C
(NNC D
)NND E
;NNE F
dbQQ 
.QQ 
OrdersQQ 
.QQ 
AddRangeQQ 
(QQ 
newRR 
OrderRR 
{RR 
IdRR 
=RR 
$numRR 
,RR 
UserIdRR "
=RR# $
$strRR% (
,RR( )
ProductNameRR* 5
=RR6 7
$strRR8 @
,RR@ A
TotalAmountRRB M
=RRN O
$numRRP T
}RRU V
,RRV W
newSS 
OrderSS 
{SS 
IdSS 
=SS 
$numSS 
,SS 
UserIdSS "
=SS# $
$strSS% /
,SS/ 0
ProductNameSS1 <
=SS= >
$strSS? F
,SSF G
TotalAmountSSH S
=SST U
$numSSV Y
}SSZ [
,SS[ \
newTT 
OrderTT 
{TT 
IdTT 
=TT 
$numTT 
,TT 
UserIdTT "
=TT# $
$strTT% (
,TT( )
ProductNameTT* 5
=TT6 7
$strTT8 A
,TTA B
TotalAmountTTC N
=TTO P
$numTTQ T
}TTU V
)UU 
;UU 
dbVV 
.VV 
SaveChangesVV 
(VV 
)VV 
;VV 
forYY 
(YY 	
intYY	 
iYY 
=YY 
$numYY 
;YY 
iYY 
<=YY 
$numYY 
;YY 
iYY 
++YY !
)YY! "
{ZZ 
db[[ 

.[[
 
Logs[[ 
.[[ 
Add[[ 
([[ 
new[[ 
LogEntry[[  
{\\ 	
Message]] 
=]] 
$"]] 
$str]] 
{]] 
i]] 
}]]  
"]]  !
,]]! "
	Timestamp^^ 
=^^ 
DateTime^^  
.^^  !
UtcNow^^! '
.^^' (

AddMinutes^^( 2
(^^2 3
-^^3 4
i^^4 5
)^^5 6
}__ 	
)__	 

;__
 
}`` 
Consoleaa 
.aa 
	WriteLineaa 
(aa 
$straa *
)aa* +
;aa+ ,
dbcc 
.cc 
SaveChangescc 
(cc 
)cc 
;cc 
}dd 
appff 
.ff 
Runff 
(ff 
)ff 	
;ff	 
	
e/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Models/User.cs
public 
class 
User 
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

required 
string 
Username #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

required 
string 
PasswordHash '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public		 

string		 
?		 
Email		 
{		 
get		 
;		 
set		  #
;		# $
}		% &
public

 

string

 
?

 
Role

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
public 

bool 
IsAdmin 
{ 
get 
; 
set "
;" #
}$ %
} Ì

f/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Models/Order.cs
public 
class 
Order 
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

required 
string 
UserId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

required 
string 
ProductName &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 

decimal 
TotalAmount 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

string 
GetOrderSummary !
(! "
)" #
{		 
return

 
$"

 
$str

 
{

 
Id

 
}

 
$str

 '
{

' (
UserId

( .
}

. /
$str

/ :
{

: ;
ProductName

; F
}

F G
$str

G W
{

W X
TotalAmount

X c
:

c d
$str

d e
}

e f
"

f g
;

g h
} 
} £
i/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Models/LogEntry.cs
public 
class 
LogEntry 
{ 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

required 
string 
Message "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

DateTime 
	Timestamp 
{ 
get  #
;# $
set% (
;( )
}* +
} ò
k/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Data/AppDbContext.cs
public 
class 
AppDbContext 
: 
	DbContext %
{ 
public 

DbSet 
< 
Order 
> 
Orders 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 

DbSet 
< 
User 
> 
Users 
{ 
get "
;" #
set$ '
;' (
}) *
public		 

DbSet		 
<		 
LogEntry		 
>		 
Logs		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 

AppDbContext 
( 
DbContextOptions (
<( )
AppDbContext) 5
>5 6
options7 >
)> ?
: 	
base
 
( 
options 
) 
{ 
} 
} 
s/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Controllers/LogController.cs
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
LogsController 
: 
ControllerBase ,
{ 
private		 
readonly		 
AppDbContext		 !
_db		" %
;		% &
public 

LogsController 
( 
AppDbContext &
db' )
)) *
{ 
_db 
= 
db 
; 
} 
[ 
HttpGet 
( 
$str 
) 
] 
[ 
EnableRateLimiting 
( 
$str 
)  
]  !
public 

async 
Task 
< 
IActionResult #
># $
GetRecentLogs% 2
(2 3
)3 4
{ 
var 
recent 
= 
await 
_db 
. 
Logs #
. 
OrderByDescending 
( 
l  
=>! #
l$ %
.% &
	Timestamp& /
)/ 0
. 
Take 
( 
$num 
) 
. 
ToListAsync 
( 
) 
; 
return 
Ok 
( 
recent 
) 
; 
} 
} á
v/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Controllers/OrdersController.cs
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
OrdersController 
: 
ControllerBase  .
{ 
private 
readonly 
AppDbContext !
_db" %
;% &
private		 
readonly		 !
IAuthorizationService		 *
_auth		+ 0
;		0 1
private

 
readonly

 
ILogger

 
<

 
OrdersController

 -
>

- .
_logger

/ 6
;

6 7
public 

OrdersController 
( 
AppDbContext (
db) +
,+ ,
ILogger- 4
<4 5
OrdersController5 E
>E F
loggerG M
,M N!
IAuthorizationServiceO d
authe i
)i j
{ 
_db 
= 
db 
; 
_auth 
= 
auth 
; 
_logger 
= 
logger 
; 
} 
[ 
HttpGet 
( 
$str 
) 
] 
[ 
	Authorize 
] 
public 

async 
Task 
< 
IActionResult #
># $
GetOrder% -
(- .
int. 1
orderId2 9
)9 :
{ 
_logger 
. 
LogInformation 
( 
$" !
$str! +
{+ ,
orderId, 3
}3 4
"4 5
)5 6
;6 7
var 
result 
= 
await 
_auth  
.  !
AuthorizeAsync! /
(/ 0
User0 4
,4 5
orderId6 =
,= >
$str? Q
)Q R
;R S
if 

( 
! 
result 
. 
	Succeeded 
) 
return 
Forbid 
( 
) 
; 
var 
order 
= 
await 
_db 
. 
Orders $
.$ %
	FindAsync% .
(. /
orderId/ 6
)6 7
;7 8
_logger 
. 
LogInformation 
( 
$" !
$str! 0
{0 1
order1 6
}6 7
"7 8
)8 9
;9 :
return   
Ok   
(   
order   
)   
;   
}!! 
}"" ð
t/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Controllers/UserController.cs
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
UserController 
: 
ControllerBase ,
{ 
private 
readonly 
AppDbContext !
_db" %
;% &
public

 

UserController

 
(

 
AppDbContext

 &
db

' )
)

) *
{ 
_db 
= 
db 
; 
} 
[ 
HttpPut 
( 
$str %
)% &
]& '
public 

async 
Task 
< 
IActionResult #
># $ 
UpdateUserVulnerable% 9
(9 :
int: =
id> @
,@ A
[B C
FromBodyC K
]K L
UserM Q
updatedUserR ]
)] ^
{ 
var 
user 
= 
await 
_db 
. 
Users "
." #
	FindAsync# ,
(, -
id- /
)/ 0
;0 1
if 

( 
user 
== 
null 
) 
return 
NotFound 
( 
) 
; 
_db 
. 
Entry 
( 
user 
) 
. 
CurrentValues %
.% &
	SetValues& /
(/ 0
updatedUser0 ;
); <
;< =
await 
_db 
. 
SaveChangesAsync "
(" #
)# $
;$ %
return 
Ok 
( 
$str &
)& '
;' (
} 
[ 
HttpPut 
( 
$str !
)! "
]" #
public   

async   
Task   
<   
IActionResult   #
>  # $
UpdateUserSecure  % 5
(  5 6
int  6 9
id  : <
,  < =
[  > ?
FromBody  ? G
]  G H
UpdateUserDto  I V
dto  W Z
)  Z [
{!! 
var"" 
user"" 
="" 
await"" 
_db"" 
."" 
Users"" "
.""" #
	FindAsync""# ,
("", -
id""- /
)""/ 0
;""0 1
if## 

(## 
user## 
==## 
null## 
)## 
return$$ 
NotFound$$ 
($$ 
)$$ 
;$$ 
user'' 
.'' 
Email'' 
='' 
dto'' 
.'' 
Email'' 
;'' 
await)) 
_db)) 
.)) 
SaveChangesAsync)) "
())" #
)))# $
;))$ %
return** 
Ok** 
(** 
$str** $
)**$ %
;**% &
}++ 
},, 
public.. 
class.. 
UpdateUserDto.. 
{// 
public00 

required00 
string00 
Username00 #
{00$ %
get00& )
;00) *
set00+ .
;00. /
}000 1
public11 

required11 
string11 
Email11  
{11! "
get11# &
;11& '
set11( +
;11+ ,
}11- .
}22 »G
j/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Controllers/Auth.cs
[		 
ApiController		 
]		 
[

 
Route

 
(

 
$str

 
)

 
]

 
public 
class 
AuthController 
: 
ControllerBase ,
{ 
private 
readonly 
AppDbContext !
_db" %
;% &
private 
readonly 
ILogger 
< 
AuthController +
>+ ,
_logger- 4
;4 5
private 
readonly 
ITokenService "
_tokenService# 0
;0 1
public 

AuthController 
( 
ILogger !
<! "
AuthController" 0
>0 1
logger2 8
,8 9
AppDbContext: F
dbG I
,I J
ITokenServiceK X
tokenServiceY e
)e f
{ 
_logger 
= 
logger 
; 
_db 
= 
db 
; 
_tokenService 
= 
tokenService $
;$ %
} 
[ 
HttpPost 
] 
public 

async 
Task 
< 
IActionResult #
># $
CreateToken% 0
(0 1
[1 2
FromBody2 :
]: ;
	UserLogin< E
loginF K
)K L
{ 
if 

( 
login 
. 
Username 
== 
$str &
&&' )
login* /
./ 0
Password0 8
==9 ;
$str< F
)F G
{ 	
var 
claims 
= 
new 
[ 
] 
{ 
new 
Claim 
( #
JwtRegisteredClaimNames -
.- .
Sub. 1
,1 2
$str3 6
)6 7
,7 8
new 
Claim 
( #
JwtRegisteredClaimNames -
.- .

UniqueName. 8
,8 9
login: ?
.? @
Username@ H
)H I
,I J
new   
Claim   
(   
$str   
,   
$str   $
)  $ %
}!! 	
;!!	 

var## 
token## 
=## 
new## 
JwtSecurityToken## ,
(##, -
issuer$$ 
:$$ 
	Constants$$ !
.$$! "
Jwt$$" %
.$$% &
Issuer$$& ,
,$$, -
audience%% 
:%% 
	Constants%% #
.%%# $
Jwt%%$ '
.%%' (
Audience%%( 0
,%%0 1
claims&& 
:&& 
claims&& 
,&& 
expires'' 
:'' 
DateTime'' !
.''! "
UtcNow''" (
.''( )
AddHours'') 1
(''1 2
$num''2 3
)''3 4
,''4 5
signingCredentials(( "
:((" #
new(($ '
SigningCredentials((( :
(((: ;
new))  
SymmetricSecurityKey)) ,
()), -
Encoding))- 5
.))5 6
UTF8))6 :
.)): ;
GetBytes)); C
())C D
	Constants))D M
.))M N
Jwt))N Q
.))Q R
Key))R U
)))U V
)))V W
,))W X
SecurityAlgorithms** &
.**& '

HmacSha256**' 1
)**1 2
)++ 
;++ 
var-- 
tokenString-- 
=-- 
new-- !#
JwtSecurityTokenHandler--" 9
(--9 :
)--: ;
.--; <

WriteToken--< F
(--F G
token--G L
)--L M
;--M N
return// 
Ok// 
(// 
new// 
{// 
token// !
=//" #
tokenString//$ /
}//0 1
)//1 2
;//2 3
}00 	
return22 
await22 
Task22 
.22 

FromResult22 $
(22$ %
Unauthorized22% 1
(221 2
)222 3
)223 4
;224 5
}33 
[55 
HttpPost55 
(55 
$str55 
)55 
]55 
public66 

async66 
Task66 
<66 
IActionResult66 #
>66# $
Register66% -
(66- .
[66. /
FromBody66/ 7
]667 8
	UserLogin669 B
login66C H
)66H I
{77 
if88 

(88 
await88 
_db88 
.88 
Users88 
.88 
AnyAsync88 $
(88$ %
u88% &
=>88' )
u88* +
.88+ ,
Username88, 4
==885 7
login888 =
.88= >
Username88> F
)88F G
)88G H
return99 

BadRequest99 
(99 
$str99 7
)997 8
;998 9
var;; 
user;; 
=;; 
new;; 
User;; 
{<< 	
Username== 
=== 
login== 
.== 
Username== %
,==% &
PasswordHash>> 
=>> 
HashPassword>> '
(>>' (
login>>( -
.>>- .
Password>>. 6
)>>6 7
}?? 	
;??	 

_dbAA 
.AA 
UsersAA 
.AA 
AddAA 
(AA 
userAA 
)AA 
;AA 
awaitBB 
_dbBB 
.BB 
SaveChangesAsyncBB "
(BB" #
)BB# $
;BB$ %
returnGG 
OkGG 
(GG 
newGG 
{GG 
userGG 
}GG 
)GG 
;GG  
}HH 
privateJJ 
stringJJ 
HashPasswordJJ 
(JJ  
stringJJ  &
passwordJJ' /
)JJ/ 0
{KK 
usingLL 
varLL 
shaLL 
=LL 
SHA256LL 
.LL 
CreateLL %
(LL% &
)LL& '
;LL' (
varMM 
bytesMM 
=MM 
shaMM 
.MM 
ComputeHashMM #
(MM# $
EncodingMM$ ,
.MM, -
UTF8MM- 1
.MM1 2
GetBytesMM2 :
(MM: ;
passwordMM; C
)MMC D
)MMD E
;MME F
returnNN 
ConvertNN 
.NN 
ToBase64StringNN %
(NN% &
bytesNN& +
)NN+ ,
;NN, -
}OO 
[RR 
HttpPostRR 
(RR 
$strRR 
)RR 
]RR 
publicSS 

asyncSS 
TaskSS 
<SS 
IActionResultSS #
>SS# $
LoginSecureSS% 0
(SS0 1
	UserLoginSS1 :
loginSS; @
)SS@ A
{TT 
varUU 
userUU 
=UU 
awaitUU 
_dbUU 
.UU 
UsersUU "
.UU" #
FirstOrDefaultAsyncUU# 6
(UU6 7
uUU7 8
=>UU9 ;
uUU< =
.UU= >
UsernameUU> F
==UUG I
loginUUJ O
.UUO P
UsernameUUP X
)UUX Y
;UUY Z
ifWW 

(WW 
userWW 
==WW 
nullWW 
||WW 
!WW 
VerifyPasswordWW +
(WW+ ,
loginWW, 1
.WW1 2
PasswordWW2 :
,WW: ;
userWW< @
.WW@ A
PasswordHashWWA M
)WWM N
)WWN O
returnXX 
UnauthorizedXX 
(XX  
newXX  #
{XX$ %
errorXX& +
=XX, -
$strXX. L
}XXM N
)XXN O
;XXO P
varZZ 
tokenZZ 
=ZZ 
_tokenServiceZZ !
.ZZ! "
GenerateTokenZZ" /
(ZZ/ 0
userZZ0 4
.ZZ4 5
IdZZ5 7
.ZZ7 8
ToStringZZ8 @
(ZZ@ A
)ZZA B
,ZZB C
userZZD H
.ZZH I
UsernameZZI Q
)ZZQ R
;ZZR S
return[[ 
Ok[[ 
([[ 
new[[ 
{[[ 
token[[ 
}[[ 
)[[  
;[[  !
}\\ 
private^^ 
bool^^ 
VerifyPassword^^ 
(^^  
string^^  &
password^^' /
,^^/ 0
string^^1 7

storedHash^^8 B
)^^B C
{__ 
return`` 
HashPassword`` 
(`` 
password`` $
)``$ %
==``& (

storedHash``) 3
;``3 4
}aa 
}cc 
publicee 
recordee 
	UserLoginee 
(ee 
stringee 
Usernameee '
,ee' (
stringee) /
Passwordee0 8
)ee8 9
;ee9 :µ
c/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Constants.cs
public 
static 
class 
	Constants 
{ 
public 

static 
class 
Jwt 
{ 
public 
const 
string 
Key 
=  !
$str" K
;K L
public 
const 
string 
Issuer "
=# $
$str% 2
;2 3
public 
const 
string 
Audience $
=% &
$str' 6
;6 7
} 
}		 
}/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Authorization/OrderOwnerRequirement.cs
public 
class !
OrderOwnerRequirement "
:# $%
IAuthorizationRequirement% >
{? @
}A Bÿ
y/Users/somkiatpuisungnoen/data/slide/devsecops/secure-code/workshop/demo-dotnet/01-api/Authorization/OrderOwnerHandler.cs
public 
class 
OrderOwnerHandler 
:   
AuthorizationHandler! 5
<5 6!
OrderOwnerRequirement6 K
,K L
intM P
>P Q
{ 
private 
readonly 
AppDbContext !
_db" %
;% &
private 
readonly 
ILogger 
< 
OrderOwnerHandler .
>. /
_logger0 7
;7 8
public

 

OrderOwnerHandler

 
(

 
AppDbContext

 )
db

* ,
,

, -
ILogger

. 5
<

5 6
OrderOwnerHandler

6 G
>

G H
logger

I O
)

O P
{ 
_db 
= 
db 
; 
_logger 
= 
logger 
; 
} 
	protected 
override 
async 
Task !"
HandleRequirementAsync" 8
(8 9'
AuthorizationHandlerContext #
context$ +
,+ ,!
OrderOwnerRequirement 
requirement )
,) *
int 
orderId 
) 
{ 
var 
userId 
= 
context 
. 
User !
.! "
FindFirstValue" 0
(0 1

ClaimTypes1 ;
.; <
NameIdentifier< J
)J K
;K L
_logger 
. 
LogInformation 
( 
$" !
$str! *
{* +
userId+ 1
}1 2
"2 3
)3 4
;4 5
var 
order 
= 
await 
_db 
. 
Orders $
. 
FirstOrDefaultAsync  
(  !
o! "
=># %
o& '
.' (
Id( *
==+ -
orderId. 5
&&6 8
o9 :
.: ;
UserId; A
==B D
userIdE K
)K L
;L M
if 

( 
order 
!= 
null 
) 
{ 	
context 
. 
Succeed 
( 
requirement '
)' (
;( )
return 
; 
}   	
context!! 
.!! 
Fail!! 
(!! 
)!! 
;!! 
}"" 
}## 